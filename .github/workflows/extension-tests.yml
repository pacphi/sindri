name: Extension System Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      # Deployment configuration
      - 'fly.toml'
      - 'Dockerfile'
      # CI scripts
      - 'scripts/prepare-fly-config.sh'
      - 'scripts/lib/fly-common.sh'
      # Extension system
      - 'docker/lib/extensions.d/**'
      - 'docker/lib/extension-manager.sh'
      - 'docker/lib/common.sh'
      - 'docker/lib/extensions-common.sh'
      - 'docker/lib/upgrade-history.sh'
      - 'docker/lib/upgrade-notifier.sh'
      # Workflow itself
      - '.github/workflows/extension-tests.yml'
      - '.github/workflows/*.yml'
      # Actions
      - '.github/actions/**'
      # Test scripts
      - '.github/scripts/extension-tests/**'
      - 'tests/**/*.sh'

  pull_request:
    branches: [ main, develop ]
    paths:
      # Deployment configuration
      - 'fly.toml'
      - 'Dockerfile'
      # CI scripts
      - 'scripts/prepare-fly-config.sh'
      - 'scripts/lib/fly-common.sh'
      # Extension system
      - 'docker/lib/extensions.d/**'
      - 'docker/lib/extension-manager.sh'
      - 'docker/lib/common.sh'
      - 'docker/lib/extensions-common.sh'
      - 'docker/lib/upgrade-history.sh'
      - 'docker/lib/upgrade-notifier.sh'
      # Workflow itself
      - '.github/workflows/extension-tests.yml'
      # Actions
      - '.github/actions/**'
      # Test scripts
      - '.github/scripts/extension-tests/**'
      - 'tests/**/*.sh'

  workflow_dispatch:
    inputs:
      extension_name:
        description: 'Test specific extension (e.g., rust, golang, ai-tools)'
        required: false
        type: string
      skip_cleanup:
        description: 'Skip cleanup for debugging'
        required: false
        default: false
        type: boolean
      skip_idempotency:
        description: 'Skip idempotency tests (faster, but less thorough)'
        required: false
        default: false
        type: boolean
      test_app_prefix:
        description: 'Test app prefix'
        required: false
        default: 'ext-test'
        type: string
      region:
        description: 'Fly.io region'
        required: false
        default: 'sjc'
        type: string

jobs:
  # ============================================================================
  # Setup Configuration
  # ============================================================================

  setup-config:
    name: Setup Configuration
    runs-on: ubuntu-latest
    outputs:
      extension_name: ${{ steps.config.outputs.extension_name }}
      skip_cleanup: ${{ steps.config.outputs.skip_cleanup }}
      skip_idempotency: ${{ steps.config.outputs.skip_idempotency }}
      test_app_prefix: ${{ steps.config.outputs.test_app_prefix }}
      region: ${{ steps.config.outputs.region }}
    steps:
      - name: Set configuration
        id: config
        run: |
          # Define defaults once - handles both workflow_dispatch and push/PR triggers
          echo "extension_name=${{ github.event.inputs.extension_name || '' }}" >> $GITHUB_OUTPUT
          echo "skip_cleanup=${{ github.event.inputs.skip_cleanup == 'true' }}" >> $GITHUB_OUTPUT
          echo "skip_idempotency=${{ github.event.inputs.skip_idempotency == 'true' }}" >> $GITHUB_OUTPUT
          echo "test_app_prefix=${{ github.event.inputs.test_app_prefix || 'ext-test' }}" >> $GITHUB_OUTPUT
          echo "region=${{ github.event.inputs.region || 'sjc' }}" >> $GITHUB_OUTPUT

  # ============================================================================
  # Validation Jobs
  # ============================================================================

  extension-manager-validation:
    name: Extension Manager Validation
    uses: ./.github/workflows/manager-validation.yml

  extension-syntax-validation:
    name: Extension Syntax Validation
    uses: ./.github/workflows/syntax-validation.yml

  # ============================================================================
  # Per-Extension Tests (Matrix)
  # ============================================================================

  per-extension-tests:
    name: Per-Extension Tests
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/per-extension.yml
    with:
      extension_name: ${{ needs.setup-config.outputs.extension_name }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
      skip_idempotency: ${{ fromJSON(needs.setup-config.outputs.skip_idempotency) }}
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Extension API Tests
  # ============================================================================

  extension-api-tests:
    name: Extension API Compliance
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/api-compliance.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Protected Extensions Tests
  # ============================================================================

  protected-extensions-tests:
    name: Protected Extensions
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/protected-extensions-tests.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Cleanup Extensions Tests
  # ============================================================================

  cleanup-extensions-tests:
    name: Cleanup Extensions
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/cleanup-extensions-tests.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Manifest Operations Tests
  # ============================================================================

  manifest-operations-tests:
    name: Manifest Operations
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/manifest-operations-tests.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Dependency Chain Tests
  # ============================================================================

  dependency-chain-tests:
    name: Dependency Chains
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/dependency-chain-tests.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Extension Combinations Tests
  # ============================================================================

  extension-combinations:
    name: Extension Combinations
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/extension-combinations.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Upgrade Tests
  # ============================================================================

  test-upgrade-helpers:
    name: Upgrade Helpers
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/test-upgrade-helpers.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  test-extensions-metadata:
    name: Extensions Metadata
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/test-extensions-metadata.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  test-extensions-upgrade-vm:
    name: Extensions Upgrade VM
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/test-extensions-upgrade-vm.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Documentation Tests
  # ============================================================================

  test-documentation:
    name: Documentation
    needs: [setup-config, extension-manager-validation, extension-syntax-validation]
    uses: ./.github/workflows/test-documentation.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Report Results
  # ============================================================================

  report-results:
    name: Test Results Summary
    if: always()
    needs:
      - setup-config
      - extension-manager-validation
      - extension-syntax-validation
      - per-extension-tests
      - extension-api-tests
      - protected-extensions-tests
      - cleanup-extensions-tests
      - manifest-operations-tests
      - dependency-chain-tests
      - extension-combinations
      - test-upgrade-helpers
      - test-extensions-metadata
      - test-extensions-upgrade-vm
      - test-documentation
    uses: ./.github/workflows/report-results.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ fromJSON(needs.setup-config.outputs.skip_cleanup) }}
      manager_validation_result: ${{ needs.extension-manager-validation.result }}
      syntax_validation_result: ${{ needs.extension-syntax-validation.result }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}
