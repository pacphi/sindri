name: Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      # Deployment configuration
      - 'fly.toml'
      - 'Dockerfile'
      # CI scripts
      - 'scripts/prepare-fly-config.sh'
      - 'scripts/lib/fly-common.sh'
      # Extension system
      - 'docker/lib/extensions.d/**'
      - 'docker/lib/extension-manager.sh'
      - 'docker/lib/common.sh'
      - 'docker/lib/extensions-common.sh'
      # Workflow itself
      - '.github/workflows/integration.yml'
      - '.github/workflows/integration-test.yml'
      - '.github/workflows/developer-workflow.yml'
      - '.github/workflows/mise-stack-integration.yml'
      # Scripts
      - '.github/scripts/integration/**'
      - '.github/scripts/common/**'

  pull_request:
    branches: [ main, develop ]
    paths:
      # Deployment configuration
      - 'fly.toml'
      - 'Dockerfile'
      # CI scripts
      - 'scripts/prepare-fly-config.sh'
      - 'scripts/lib/fly-common.sh'
      # Extension system
      - 'docker/lib/extensions.d/**'
      - 'docker/lib/extension-manager.sh'
      - 'docker/lib/common.sh'
      - 'docker/lib/extensions-common.sh'
      # Workflow itself
      - '.github/workflows/integration.yml'
      - '.github/workflows/integration-test.yml'
      - '.github/workflows/developer-workflow.yml'
      - '.github/workflows/mise-stack-integration.yml'
      # Scripts
      - '.github/scripts/integration/**'
      - '.github/scripts/common/**'

  workflow_dispatch:
    inputs:
      test_region:
        description: 'Fly.io region for test deployment'
        required: false
        default: 'sjc'
        type: string
      skip_cleanup:
        description: 'Skip cleanup (for debugging)'
        required: false
        default: false
        type: boolean

jobs:
  # ============================================================================
  # Setup Configuration
  # ============================================================================

  setup-config:
    name: Setup Configuration
    runs-on: ubuntu-latest
    outputs:
      region: ${{ steps.config.outputs.region }}
      test_app_prefix: ${{ steps.config.outputs.test_app_prefix }}
      skip_cleanup: ${{ steps.config.outputs.skip_cleanup }}
    steps:
      - name: Set configuration
        id: config
        run: |
          # Define defaults once - handles both workflow_dispatch and push/PR triggers
          echo "region=${{ github.event.inputs.test_region || 'sjc' }}" >> $GITHUB_OUTPUT
          echo "test_app_prefix=sindri-ci-test" >> $GITHUB_OUTPUT
          echo "skip_cleanup=${{ github.event.inputs.skip_cleanup == 'true' }}" >> $GITHUB_OUTPUT

  # ============================================================================
  # Core Integration Test
  # ============================================================================

  integration-test:
    name: Integration Test
    needs: setup-config
    uses: ./.github/workflows/integration-test.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ needs.setup-config.outputs.skip_cleanup }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Developer Workflow Test
  # ============================================================================

  developer-workflow:
    name: Developer Workflow
    needs: [setup-config, integration-test]
    uses: ./.github/workflows/developer-workflow.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ needs.setup-config.outputs.skip_cleanup }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Mise Stack Integration Test
  # ============================================================================

  mise-stack-integration:
    name: Mise Stack Integration
    needs: [setup-config, integration-test]
    uses: ./.github/workflows/mise-stack-integration.yml
    with:
      test_app_prefix: ${{ needs.setup-config.outputs.test_app_prefix }}
      region: ${{ needs.setup-config.outputs.region }}
      skip_cleanup: ${{ needs.setup-config.outputs.skip_cleanup }}
    secrets:
      FLYIO_AUTH_TOKEN: ${{ secrets.FLYIO_AUTH_TOKEN }}

  # ============================================================================
  # Notify on Failure
  # ============================================================================

  notify-failure:
    name: Notify on Failure
    if: failure()
    needs: [setup-config, integration-test, developer-workflow, mise-stack-integration]
    runs-on: ubuntu-latest

    steps:
      - name: Report failure
        run: |
          echo "❌ Integration tests failed"
          echo "## ❌ Integration Tests Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "One or more integration tests failed. Please check the individual job logs for details." >> $GITHUB_STEP_SUMMARY
